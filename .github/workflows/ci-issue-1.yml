name: XNIO and Remoting
'on':
  push:
    branches: ci-branch-1
env:
  MAVEN_OPTS: -Xms756M -Xmx1g
  OB_ISSUE_ID: 1
jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
    - run: echo hello!!
#    - uses: actions/checkout@v2
#      with:
#        ref: ci-branch-1
#    - uses: n1hility/cancel-previous-runs@v2
#      with:
#        token: ${{ secrets.GITHUB_TOKEN }}
  xnio-build:
    name: xnio
    runs-on:
    - ubuntu-latest
    env:
      OB_ISSUE_DATA_JSON: .ci-tools/issue-data.json
    needs:
    - cancel-previous-runs
    outputs:
      version_xnio: ${{steps.pre-build.outputs.version}}
      git-sha: ${{steps.pre-build.outputs.git-sha}}
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/xnio
        ref: '3.8'
    - uses: actions/checkout@v2
      with:
        ref: ci-branch-1
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - id: pre-build
      uses: kabir/play-action/temp-pre-build@master
      with:
        build: 1
        custom: 0
        end: 0
    - name: Build with Maven
      run: 'mvn -B install -DskipTests '
    - name: Mount ~/.m2/repository to .m2-repo-mount since the actions can't access
        ~/.m2 directly
      run: mkdir .m2-repo-mount && sudo mount --rbind ~/.m2/repository/ .m2-repo-mount
    - uses: kabir/play-action/temp-post-build@master
      with:
        build: 1
        custom: 0
        component: xnio
        end: 0
    - name: Unmount .m2-repo-mount
      run: sudo umount .m2-repo-mount && rmdir .m2-repo-mount
    - name: Run multi-repo-ci-tool 'copy-logs' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/xnio
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r xnio.zip xnio
        rm -rf xnio
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20201120-192220
        path: .project-build-logs
  jboss-remoting-build:
    name: jboss-remoting
    runs-on:
    - ubuntu-latest
    env:
      OB_VERSION_XNIO: ${{ needs.xnio-build.outputs.version_xnio}}
      OB_ISSUE_DATA_JSON: .ci-tools/issue-data.json
    needs:
    - cancel-previous-runs
    - xnio-build
    outputs:
      version_jboss_remoting: ${{steps.pre-build.outputs.version}}
      git-sha: ${{steps.pre-build.outputs.git-sha}}
    steps:
    - uses: actions/checkout@v2
      with:
        repository: kabir/jboss-remoting
        ref: '5.0'
    - uses: actions/checkout@v2
      with:
        ref: ci-branch-1
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Mount ~/.m2/repository to .m2-repo-mount since the actions can't access
        ~/.m2 directly
      run: mkdir .m2-repo-mount && sudo mount --rbind ~/.m2/repository/ .m2-repo-mount
    - id: pre-build
      uses: kabir/play-action/temp-pre-build@master
      with:
        build: 1
        custom: 0
        end: 0
    - name: Build with Maven
      run: mvn -B install -DskipTests -Dxnio.version=${OB_VERSION_XNIO}
    - uses: kabir/play-action/temp-post-build@master
      with:
        build: 1
        custom: 0
        component: jboss-remoting
        end: 0
    - name: Unmount .m2-repo-mount
      run: sudo umount .m2-repo-mount && rmdir .m2-repo-mount
    - name: Run multi-repo-ci-tool 'copy-logs' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/jboss-remoting
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r jboss-remoting.zip jboss-remoting
        rm -rf jboss-remoting
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20201120-192220
        path: .project-build-logs
  wildfly-core-build:
    name: wildfly-core-build
    runs-on:
    - ubuntu-latest
    env:
      OB_VERSION_XNIO: ${{ needs.xnio-build.outputs.version_xnio}}
      OB_VERSION_JBOSS_REMOTING: ${{ needs.jboss-remoting-build.outputs.version_jboss_remoting}}
      OB_ISSUE_DATA_JSON: .ci-tools/issue-data.json
      MAVEN_SMOKE_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae -DallTests
      MAVEN_BUILD_EXTRA_PARAMS: -DlegacyBuild -DlegacyRelease -DskipTests
      OB_ARTIFACTS_DIR: .ci-tools/artifacts
      OB_STATUS_TEXT: .ci-tools/artifacts/status-text.txt
      OB_MAVEN_DEPENDENCY_VERSIONS: -Dversion.org.jboss.xnio=${{needs.xnio-build.outputs.version_xnio}}
        -Dversion.org.jboss.remoting=${{needs.jboss-remoting-build.outputs.version_jboss_remoting}}
    needs:
    - cancel-previous-runs
    - xnio-build
    - jboss-remoting-build
    outputs:
      version_wildfly_core: ${{steps.pre-build.outputs.version}}
      git-sha: ${{steps.pre-build.outputs.git-sha}}
    steps:
    - uses: actions/checkout@v2
      with:
        repository: wildfly/wildfly-core
        ref: master
    - uses: actions/checkout@v2
      with:
        ref: ci-branch-1
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Mount ~/.m2/repository to .m2-repo-mount since the actions can't access
        ~/.m2 directly
      run: mkdir .m2-repo-mount && sudo mount --rbind ~/.m2/repository/ .m2-repo-mount
    - id: pre-build
      uses: kabir/play-action/temp-pre-build@master
      with:
        build: 1
        custom: 1
        end: 0
    - name: Maven Build
      run: |
        mvn -B install ${MAVEN_TEST_PARAMS} ${MAVEN_BUILD_EXTRA_PARAMS} -pl controller -am -Dversion.org.jboss.xnio=${OB_VERSION_XNIO} -Dversion.org.jboss.remoting=${OB_VERSION_JBOSS_REMOTING}
        echo "build done!"
    - uses: kabir/play-action/temp-post-build@master
      with:
        build: 1
        custom: 1
        component: wildfly-core
        end: 0
    - name: Unmount .m2-repo-mount
      run: sudo umount .m2-repo-mount && rmdir .m2-repo-mount
    - name: Run multi-repo-ci-tool 'copy-logs' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-core-build
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-core-build.zip wildfly-core-build
        rm -rf wildfly-core-build
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20201120-192220
        path: .project-build-logs
  wildfly-core-ob-ci-end-job:
    name: wildfly-core-ob-ci-end-job
    runs-on:
    - ubuntu-latest
    if: ${{ always() }}
    env:
      OB_VERSION_XNIO: ${{ needs.xnio-build.outputs.version_xnio}}
      OB_VERSION_JBOSS_REMOTING: ${{ needs.jboss-remoting-build.outputs.version_jboss_remoting}}
      OB_VERSION_WILDFLY_CORE: ${{ needs.wildfly-core-build.outputs.version_wildfly_core}}
      OB_ISSUE_DATA_JSON: .ci-tools/issue-data.json
      MAVEN_SMOKE_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae
      MAVEN_TEST_PARAMS: -DfailIfNoTests=false -Dipv6 -Djboss.test.transformers.eap
        -Dci-cleanup=true -fae -DallTests
      OB_ARTIFACTS_DIR: .ci-tools/artifacts
      OB_STATUS_TEXT: .ci-tools/artifacts/status-text.txt
      OB_PROJECT_VERSION: ${{ needs.wildfly-core-build.outputs.version_wildfly_core
        }}
      OB_MAVEN_DEPENDENCY_VERSIONS: -Dversion.org.jboss.xnio=${{needs.xnio-build.outputs.version_xnio}}
        -Dversion.org.jboss.remoting=${{needs.jboss-remoting-build.outputs.version_jboss_remoting}}
    needs:
    - xnio-build
    - jboss-remoting-build
    - wildfly-core-build
    steps:
    - uses: actions/checkout@v2
      with:
        repository: wildfly/wildfly-core
        ref: master
    - uses: actions/checkout@v2
      with:
        ref: ci-branch-1
        path: .ci-tools
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - name: Mount ~/.m2/repository to .m2-repo-mount since the actions can't access
        ~/.m2 directly
      run: mkdir .m2-repo-mount && sudo mount --rbind ~/.m2/repository/ .m2-repo-mount
    - id: pre-build
      uses: kabir/play-action/temp-pre-build@master
      with:
        build: 0
        custom: 1
        end: 0
    - uses: actions/checkout@v2
      with:
        repository: wildfly/wildfly-s2i
        path: .maven-repo-generator
    - run: echo "hello from core" >> ${OB_ARTIFACTS_DIR}/from-core
    - run: echo "CORE STATUS - green!!" >> ${OB_STATUS_TEXT}
    - uses: kabir/play-action/temp-post-build@master
      with:
        build: 0
        custom: 1
        component: wildfly-core
        end: 0
    - name: Run multi-repo-ci-tool 'copy-logs' command
      if: ${{ failure() }}
      run: |
        java -jar .ci-tools/multi-repo-ci-tool.jar copy-logs . .project-build-logs/wildfly-core-ob-ci-end-job
    - if: ${{ failure() }}
      run: |
        cd .project-build-logs
        zip -r wildfly-core-ob-ci-end-job.zip wildfly-core-ob-ci-end-job
        rm -rf wildfly-core-ob-ci-end-job
    - uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: xnio_and_remoting-logs-20201120-192220
        path: .project-build-logs
  ob-ci-end-job:
    name: ob-ci-end-job
    runs-on:
    - ubuntu-latest
    needs:
    - cancel-previous-runs
    - xnio-build
    - jboss-remoting-build
    - wildfly-core-build
    - wildfly-core-ob-ci-end-job
    env:
      MAVEN_OPTS: -Xmx1g -Xmx1g
      OB_ARTIFACTS_DIR: artifacts
      OB_VERSION_WILDFLY_CORE: ${{ needs.wildfly-core-build.outputs.version_wildfly_core}}
      OB_STATUS_TEXT: artifacts/status-text.txt
      OB_VERSION_XNIO: ${{ needs.xnio-build.outputs.version_xnio}}
      OB_VERSION_JBOSS_REMOTING: ${{ needs.jboss-remoting-build.outputs.version_jboss_remoting}}
      OB_ISSUE_DATA_JSON: issue-data.json
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ci-branch-1
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
    - id: pre-build
      uses: kabir/play-action/temp-pre-build@master
      with:
        build: 0
        custom: 0
        end: 1
    - name: test
      run: |-
        echo hello
        ls -al ${OB_ARTIFACTS_DIR}
        echo status
        cat ${OB_STATUS_TEXT}
    - uses: kabir/play-action/temp-post-build@master
      with:
        build: 0
        custom: 0
        component: end-job
        end: 1
